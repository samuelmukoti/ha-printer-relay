name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt

    - name: Run unit tests
      run: |
        python -m pytest tests/test_*.py -v --cov=. --cov-report=xml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and run integration tests
      run: |
        chmod +x tests/run_integration_tests.sh
        ./tests/run_integration_tests.sh

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
        
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/${{ matrix.arch }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository }}/open-replay-printer-${{ matrix.arch }}:latest
          ghcr.io/${{ github.repository }}/open-replay-printer-${{ matrix.arch }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 